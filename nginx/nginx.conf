# The user to run Nginx as
# It is safest to leave the default user
user nginx;

# Decent starting point for this is the number of cores/threads on the machine
# cat /proc/cpuinfo | grep ^processor | wc -l
worker_processes 1;

# Pid file location
pid /var/run/nginx.pid;

events {
    # You can increase it further,
    # but you should check "ulimit -n" before adjusting higher
    worker_connections 1024;
}

http {

    # ===================
    # BASIC OPTIMIZATIONS
    # ===================

    sendfile on; 
    tcp_nodelayon;

    # File type detection and default
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Security: Don't advertise every detail of the server to all requests
    server_tokens off;

    # This might be better set to on for some, off for some
    # tcp_nopush     on;

    # Uncomment if you for some reason have a very long domain name
    # server_names_hash_bucket_size 64;


    # ========
    # TIMEOUTS
    # ========

    # Responsible for the time a server will wait for a client body
    # or client header to be sent after request.
    client_body_timeout 12;
    client_header_timeout 12;

    # Nginx will close connections with the client after this period of time.
    keepalive_timeout 15;

    # If  after this time client will take nothing,
    # then Nginx is shutting down the connection.
    send_timeout 10;


    # ================
    # LOGGING SETTINGS
    # ================

    # Access logging is a bit of useless, enable it only if you really need to
    # access_log /var/log/nginx/access.log;

    # Error logging however is useful, make sure the destination folder exists
    error_log /var/log/nginx/error.log;


    # =============
    # GZIP SETTINGS
    # =============

    # Enable Gzip compression
    # Disable it for clients that don't support it
    gzip on;
    gzip_disable "msie6";
    gzip_disable "Wget";

    # Make sure any third-party proxies cache things properly
    gzip_vary on;

    # Compress as much as possible
    gzip_proxied any;

    # Compress level (max 9) - high level means more loading time for the client
    gzip_comp_level 2;

    # File types to Gzip compress, it works best for plain text files
    gzip_types text/plain text/html text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    # Minimum file size to compress files
    gzip_min_length 1000;

    # Set the buffer size of gzip, 4 32k is good enough for almost everybody.
    gzip_buffers 4 32k;


    # =======
    # CACHING
    # =======

    # Enables proxy cache to /var/cache/nginx/xx/xx/xx/*
    # ... calls the cache "STATIC"
    # ... delete files from cache completely if not requested within 24h
    # ... and allow a maximum of 1GB of disk space to be consumed for it
    #
    # Make sure the directory /var/cache/nginx exists
    # and writable by the Nginx user, or change the path
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:8m max_size=1g inactive=600m;
    proxy_temp_path /var/tmp;


    # ===============
    # BUFFER SETTINGS
    # ===============

    # If the buffer sizes are too low, then Nginx will have to write
    # to a temporary file causing the disk to read and write constantly

    # Handles the client buffer size, meaning any POST actions sent to Nginx.
    client_body_buffer_size 10K;

    # Handles the client header size. For all intents and purposes,
    # 1K is usually a decent size for this directive.
    client_header_buffer_size 1k;

    # The maximum allowed size for a client request.
    # If the maximum size is exceeded, then Nginx will spit out a 413 error
    client_max_body_size 8m;

    #The maximum number and size of buffers for large client headers.
    large_client_header_buffers 2 1k;


    # ====================
    # SITES CONFIGURATIONS
    # ====================

    # Include all additional configuration files
    include /etc/nginx/conf.d/*.conf;

    # Include all configs for enabled sites
    include /etc/nginx/sites-enabled/*;


}